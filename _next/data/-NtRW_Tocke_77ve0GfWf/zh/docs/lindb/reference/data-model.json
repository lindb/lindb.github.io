{"pageProps":{"page":{"path":"/docs/lindb/09-reference/01-data-model.mdx","meta":{"title":"数据模型"},"title":"数据模型","parent":"Reference","commitInfo":{"author":"stone1100","date":"Mon Jun 24 07:03:27 2024"}},"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    path: \"path\",\n    strong: \"strong\",\n    svg: \"svg\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"数据模型\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"时间序列术语\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"术语\"\n          }), _jsx(_components.th, {\n            children: \"描述\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Namespace\"\n          }), _jsx(_components.td, {\n            children: \"命名空间：对指标名进行分类\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Metric Name\"\n          }), _jsx(_components.td, {\n            children: \"指标名：类似关系型数据库中的表名\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Tag\"\n          }), _jsx(_components.td, {\n            children: \"标签(Key/Value)：每个指标名下面可以加多个标签\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Time Series\"\n          }), _jsx(_components.td, {\n            children: \"时间线：由 Metric Name + Tags 组合成对应一条时间线\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Field\"\n          }), _jsx(_components.td, {\n            children: \"字段：一个指标下面可以有多个字段\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Timestamp\"\n          }), _jsx(_components.td, {\n            children: \"时间点：数据生成的时间点\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Data Point\"\n          }), _jsx(_components.td, {\n            children: \"数据点：一条时间线在某个时间点的数据点\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"时间序列标识\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"时间序列的特性可以简单用如图表述：\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/design/time_series_characteristic.png\",\n        alt: \"时序特性\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"每一个时间序列都由\", _jsx(_components.strong, {\n        children: \"指标名\"\n      }), \"与\", _jsx(_components.strong, {\n        children: \"标签\"\n      }), \"的键值对以及\", _jsx(_components.strong, {\n        children: \"字段\"\n      }), \"来唯一标识。\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"指标名：记录了时序对象的具体意义（例如：cpu.load，即监控对象为 CPU 的负载情况）；\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"标签：对时序对象的补充说明，应该使用可枚举的字符串进行标示（例如：host=1.1.1.1,idc=sh，即该机器的 ip 地址为 1.1.1.1，所在机房在 sh）。可以对这些标签来做过滤和聚合操作，比如查找单条 ip\\n地址的机器、查找多条 ip 地址的机器、前缀搜索 50 条 ip 地址的机器、搜索 sh 上产区的所有机器等；\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如图所示：sh 机房中 IP 地址为 1.1.1.1 在 2019-01-01 10:00:00 时 CPU 的负载为 10.0，即某个对象在某个时刻发生了什么。\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"markdown-alert markdown-alert-caution\",\n      dir: \"auto\",\n      children: [\"\\n\", _jsxs(_components.p, {\n        className: \"markdown-alert-title\",\n        dir: \"auto\",\n        children: [_jsx(_components.svg, {\n          className: \"octicon\",\n          viewBox: \"0 0 16 16\",\n          width: \"16\",\n          height: \"16\",\n          \"aria-hidden\": \"true\",\n          children: _jsx(_components.path, {\n            d: \"M4.47.22A.749.749 0 0 1 5 0h6c.199 0 .389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749 0 0 1-.22.53l-4.25 4.25A.749.749 0 0 1 11 16H5a.749.749 0 0 1-.53-.22L.22 11.53A.749.749 0 0 1 0 11V5c0-.199.079-.389.22-.53Zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5ZM8 4a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 4Zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"\n          })\n        }), \"CAUTION\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"尽量不要使用不可枚举的字符串作为指标名或者标签，如 UUID、用户 ID 等。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"字段类型\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"和别的时序数据库不同的是 LinDB 在提供多字段支持的同时，支持字段类型，以更好的处理时序场景下的分析计算以及自动的 Rollup 等。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"LinDB 目前提供多种标准类型，这些类型可以通过 SDK 上报到后台服务中，所有原始数据在落盘时便会根据相应的字段类型进行聚合，具体类型如下：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#sum\",\n          children: \"Sum\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#min\",\n          children: \"Min\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#max\",\n          children: \"Max\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#last\",\n          children: \"Last\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#first\",\n          children: \"First\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/docs/lindb/reference/data-model#histogram\",\n          children: \"Histogram\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"markdown-alert markdown-alert-tip\",\n      dir: \"auto\",\n      children: [\"\\n\", _jsxs(_components.p, {\n        className: \"markdown-alert-title\",\n        dir: \"auto\",\n        children: [_jsx(_components.svg, {\n          className: \"octicon\",\n          viewBox: \"0 0 16 16\",\n          width: \"16\",\n          height: \"16\",\n          \"aria-hidden\": \"true\",\n          children: _jsx(_components.path, {\n            d: \"M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z\"\n          })\n        }), \"TIP\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"数据聚合指某个时间窗口，如 5/10 秒、1 分钟内的值，如 1 分钟内的总和可以用 Sum。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sum\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sum 是一个自动累计的字段，多个值在存储或查询时会根据时间区间进行自动汇总求和。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可以用 Sum 来记录某时间内的订单的个数、服务的错误数、流量等数据。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Min\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Min 是一个自动求最小值的字段，多个值在存储时会根据时间区间写入最小的一个值，在降采样查询时也会如此。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可以用 Min 来记录某个设备某个时间内的最低温度。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Max\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Max 是一个自动求最大值的字段，功能与 Min 类似。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可以用 Max 来记录某个设备某个时间内的最高温度。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Last\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Last 是某个时间内最后一个值，一般表示最新值。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可以用 Last 来记录当前的内存用量、CPU使用率等。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"First\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First 是某个时间内第一个值。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Histogram\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Histogram 是组成直方图数据的复合字段，在 SDK 上报时，对应的数据会被拆解为多个字段，记录到不同的 Bucket 中，以支持计算99线、95线等，同时 Histogram 也可以附加记录 Min/Max/Sum 等统计值。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可以用 Histogram 来记录某个服务在某个时间内处理请求的延时。\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"markdown-alert markdown-alert-important\",\n      dir: \"auto\",\n      children: [\"\\n\", _jsxs(_components.p, {\n        className: \"markdown-alert-title\",\n        dir: \"auto\",\n        children: [_jsx(_components.svg, {\n          className: \"octicon\",\n          viewBox: \"0 0 16 16\",\n          width: \"16\",\n          height: \"16\",\n          \"aria-hidden\": \"true\",\n          children: _jsx(_components.path, {\n            d: \"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"\n          })\n        }), \"IMPORTANT\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Histogram 作为复杂类型运行广泛，同时也内置了 Min/Max/Sum 等统计值，意味着存储计算 Histogram 需要更多的服务器资源。\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tocItems":[{"id":"数据模型","level":2,"title":"数据模型"},{"id":"时间序列术语","level":3,"title":"时间序列术语"},{"id":"时间序列标识","level":3,"title":"时间序列标识"},{"id":"字段类型","level":2,"title":"字段类型"},{"id":"sum","level":3,"title":"Sum"},{"id":"min","level":3,"title":"Min"},{"id":"max","level":3,"title":"Max"},{"id":"last","level":3,"title":"Last"},{"id":"first","level":3,"title":"First"},{"id":"histogram","level":3,"title":"Histogram"}],"releases":null,"sidebar":[{"index":2,"title":"Getting Started","children":[{"index":1,"title":"Docker","children":[],"href":"/docs/lindb/getting-started/docker"},{"index":2,"title":"安装包","children":[],"href":"/docs/lindb/getting-started/package"}]},{"index":3,"title":"Developer Guide","children":[{"index":1,"title":"建立连接","children":[],"href":"/docs/lindb/developer-guide/connect"},{"index":2,"title":"创建数据库","children":[],"href":"/docs/lindb/developer-guide/create-database"},{"index":3,"title":"写入数据","children":[],"href":"/docs/lindb/developer-guide/insert-data"},{"index":4,"title":"查询数据","children":[],"href":"/docs/lindb/developer-guide/query-data"}]},{"index":4,"title":"Deployment","children":[{"index":1,"title":"Kubernetes","children":[],"href":"/docs/lindb/deployment/kubernetes"},{"index":2,"title":"手动部署","children":[],"href":"/docs/lindb/deployment/manual"}]},{"index":5,"title":"Client","children":[{"index":1,"title":"CLI","children":[],"href":"/docs/lindb/client/cli"},{"index":2,"title":"客户端 SDK","children":[],"href":"/docs/lindb/client/client-libraries"},{"index":3,"title":"Go","children":[],"href":"/docs/lindb/client/go"},{"index":4,"title":"Java","children":[],"href":"/docs/lindb/client/java"}]},{"index":6,"title":"Lin Ql","children":[{"index":1,"title":"SQL","children":[],"href":"/docs/lindb/lin-ql/sql"}]},{"index":7,"title":"Admin Console","children":[{"index":1,"title":"简介","children":[],"href":"/docs/lindb/admin-console/index"},{"index":2,"title":"集群状态","children":[],"href":"/docs/lindb/admin-console/overview"},{"index":3,"title":"数据查询","children":[],"href":"/docs/lindb/admin-console/search"},{"index":4,"title":"数据浏览","children":[],"href":"/docs/lindb/admin-console/explore"},{"index":5,"title":"监控","children":[],"href":"/docs/lindb/admin-console/monitoring"},{"index":6,"title":"元数据","children":[],"href":"/docs/lindb/admin-console/metadata"}]},{"index":8,"title":"Api","children":[{"index":1,"title":"介绍","children":[],"href":"/docs/lindb/api/index"},{"index":2,"title":"数据写入","children":[],"href":"/docs/lindb/api/insert"},{"index":3,"title":"数据查询","children":[],"href":"/docs/lindb/api/query"},{"index":4,"title":"集群状态","children":[],"href":"/docs/lindb/api/state"}]},{"index":9,"title":"Reference","children":[{"index":1,"title":"数据模型","children":[],"href":"/docs/lindb/reference/data-model"},{"index":2,"title":"Metric","children":[],"href":"/docs/lindb/reference/metric"},{"index":3,"title":"配置参数","children":[],"href":"/docs/lindb/reference/configuration"}]},{"index":10,"title":"Design","children":[{"index":1,"title":"架构","children":[],"href":"/docs/lindb/design/architecture"},{"index":2,"title":"集群协调","children":[],"href":"/docs/lindb/design/coordinator"},{"index":3,"title":"数据复制","children":[],"href":"/docs/lindb/design/replication"},{"index":4,"title":"查询","children":[],"href":"/docs/lindb/design/query"},{"index":5,"title":"存储","children":[],"href":"/docs/lindb/design/storage"},{"index":6,"title":"内存数据库","children":[],"href":"/docs/lindb/design/memory-database"},{"index":7,"title":"例排索引","children":[],"href":"/docs/lindb/design/inverted-index"}]}],"locale":"zh","_nextI18Next":{"initialI18nStore":{"zh":{"translation":{"A lightweight, observability pipeline":"轻量级数据处理平台","A single server could easily support more than one million write TPS.":"机支持百万以上TPS写入；","Admin Console":"控制台","All-in-one observability platform":"一站式可观测平台","An open-source, cloud native, horizontally scalable, distributed time-series database.":"一款开源分布式时序数据库，具有高性能、高可用性和水平扩展性","An open-source, cloud native, observabilty platform":"云原生开源可观测平台","Architecture":"整体架构","Ask a Question":"提问","Auto Rollup":"自动 Rollup","Bug report":"发现 Bug","Client":"客户端","Cross Multiple IDCs":"跨多数据中心","Deployment":"集群部署","Design":"设计","Developer Guide":"开发手册","Distributed time-series database":"分布式时序数据库","Docs":"文档","Documentation":"文档","Downloads":"下载","Easy to use":"简单易用","Edit this page on Github":"在 GitHub 上编辑此页","Feature request":"新需求","Get Help":"获取帮助","Getting Started":"快速开始","High availability":"高可用","High performance":"高性能","Horizontal scalability":"水平扩展","Horizontal scalable is made simple by adding more new broker and storage nodes without too much thinking and manual operations Schema-free multi-dimensional data model with Metric, Tags, and Fields.":"支持 Tags 级别的 Sharding 机制，可将任一 Metric 数据充分分散到多个存储节点；","Insert data":"数据写入","Inside LinDB":"技术内幕","Introduction":"介绍","Inverted index":"例排索引","Key Features":"主要功能","Learn More":"更多","License":"许可证","LinDB is designed to work under a Multi-Active IDCs cloud architecture. The compute layer of LinDB, called brokers, supports efficient Multi-IDCs aggregation query.":"支持各数据中心写入，多数据中心查询聚合；","LinDB supports rollup in specific intervals(minute, hour and day) automatically after creating the database(unlike the Continuous-Query of InfluxDB).":"支持秒级数据写入后自动Rollup到分钟、小时和天的粒度，无需人工介入（如 InfluxDB Continuous-Query）；","On this page":"本页导航","Open source":"开源","Query data":"数据查询","Read the installation guide for more information":{"":"查看安装手册了解更多信息。"},"Reference":"参考手册","Release Date":"发布时间","Release Note":"发布日志","Releases":"变更日志","Resources":"资源","Schema-free multi-dimensional data model with Metric, Tags, and Fields.":"支持 Metric + Tags + Fields 的方式，无需提前定义 Schema；","Storage":"存储","Tags-based sharding strategy resolves the hotspot problem":"充分解决热点问题，可通过增加服务器数量线性增加处理能力；","The LinQL is flexible yet handy for real-time data analytics.":"可通过 LinQL 进行实时数据分析；","The multi-channel replication protocol supports any amount of nodes, ensures the system availability.":"独创的多通道复制协议支持任意节点数的多副本机制，可保证整个服务的高可用性；","This page could not be found":"找不到此页面","Uncompress":"解压","Version":"版本","View on GitHub":"GitHub","What's LinDB?":"什么是 LinDB？","What's New in":"","Why LinDB?":"为什么选择 LinDB？","With fundamental techniques like efficient compression storage and parallel computing, LinDB delivers highly optimized query performance.":"高效的数据压缩与多节点的并行查询与计算，专注查询性能优化；"}},"en":{"translation":{"Lin Ql":"Lin QL","Api":"API"}}},"initialLocale":"zh","ns":["translation"],"userConfig":null}},"__N_SSG":true}