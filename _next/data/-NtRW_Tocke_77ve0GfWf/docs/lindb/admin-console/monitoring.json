{"pageProps":{"page":{"path":"/docs/lindb/07-admin-console/05-monitoring.mdx","meta":{"title":"Monitoring","sidebar":"Cluster monitoring"},"title":"Cluster monitoring","parent":"Admin Console","commitInfo":{"author":"stone1100","date":"Mon Jun 24 07:03:27 2024"}},"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Dashboard\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dashboard is a self-monitoring page that comes with LinDB, the internal real-time status of each component is available\\nin the relevant dashboards\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For specific metric descriptions, refer to \", _jsx(_components.a, {\n        href: \"/docs/reference/metric\",\n        children: \"Metric\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/dashboard.png#browser\",\n        alt: \"Dashboard\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Broker Dashboard\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Dashboard\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Broker Query\"\n          }), _jsx(_components.td, {\n            children: \"Task, Request/Response\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Ingestion\"\n          }), _jsx(_components.td, {\n            children: \"Broker ingestion traffic, io, duration\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Broker Write\"\n          }), _jsx(_components.td, {\n            children: \"Broker write count、statistics\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Broker Coordinator\"\n          }), _jsx(_components.td, {\n            children: \"Broker coordination monitoring\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Master Coordinator\"\n          }), _jsx(_components.td, {\n            children: \"Master node coordination monitoring\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Master Controller\"\n          }), _jsx(_components.td, {\n            children: \"Master election   monitoring\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Concurrent Pool\"\n          }), _jsx(_components.td, {\n            children: \"Concurrency pool monitoring\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Concurrent Limit\"\n          }), _jsx(_components.td, {\n            children: \"Concurrency pool limiter\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Network TCP\"\n          }), _jsx(_components.td, {\n            children: \"Connection, Traffic, I/O\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Network GRPC\"\n          }), _jsx(_components.td, {\n            children: \"Client/Server Stream\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Runtime\"\n          }), _jsx(_components.td, {\n            children: \"Golang runtime\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"System\"\n          }), _jsx(_components.td, {\n            children: \"Node system, such as CPU, memory, disk\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Storage Dashboard\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Dashboard\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Storage Query\"\n          }), _jsx(_components.td, {\n            children: \"Task, Request/Response\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"WAL\"\n          }), _jsx(_components.td, {\n            children: \"Write Ahead Log(ingestion, writing, replication)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Local Replication\"\n          }), _jsx(_components.td, {\n            children: \"Consuming logs locally from WAL to write TSDB\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Remote Replication\"\n          }), _jsx(_components.td, {\n            children: \"Storage leader consumes WAL logs and copies the data to the follower node\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Storage Coordinator\"\n          }), _jsx(_components.td, {\n            children: \"Storage Coordination\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"TSDB Write\"\n          }), _jsx(_components.td, {\n            children: \"Family Write，Memory Database Write\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"TSDB Job\"\n          }), _jsx(_components.td, {\n            children: \"Flush Operation\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"KV Read\"\n          }), _jsx(_components.td, {\n            children: \"KV Read Traffic、Count\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"KV Write\"\n          }), _jsx(_components.td, {\n            children: \"KV Write Traffic、Count\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"KV Job\"\n          }), _jsx(_components.td, {\n            children: \"KV Flush, Compaction\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Concurrent Pool\"\n          }), _jsx(_components.td, {\n            children: \"Concurrency pool\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Network TCP\"\n          }), _jsx(_components.td, {\n            children: \"Connection, Traffic, I/O\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Network GRPC\"\n          }), _jsx(_components.td, {\n            children: \"Client/Server Stream\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Runtime\"\n          }), _jsx(_components.td, {\n            children: \"Go runtime\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"System\"\n          }), _jsx(_components.td, {\n            children: \"Node system, such as CPU, memory, disk\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Replication\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Database replication status mainly includes the following status:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Basic state information of the database, such as the number of replicas;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Replica distribution and replication status, such as channels delay information;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Local replication write.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"WAL\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are 2 modes viewing replica status, which can be switched through the button on the right side\\nof the Replication State:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Mode 1: Perspective of the distribution of replicas in each Storage node, and show whether there is a\\nreplication delay, mouse hover to a shard will display replication of each channel in it;\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/replication_shards.png#browser\",\n        alt: \"Replication shards\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Mode 2: Perspective of replication channels under all shards, Shard/Family related filtering and filtering is\\nsupported\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/replication_families.png#browser\",\n        alt: \"Replication families\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Write\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Write status of the local replica:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Write status of each memory-database;\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Each \", _jsx(_components.strong, {\n            children: \"leader\"\n          }), \"'s writing pointer status;\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Mode 1: Perspective of writing status of all memory databases under all shards,\\nShard/Family related filtering and filtering is supported\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/memory_database_write.png#browser\",\n        alt: \"Memory database write\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Mode 2: Perspective of all active families under all shards,\\nShard/Family related filtering and filtering is supported\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/memory_database_replica.png#browser\",\n        alt: \"Memory database replica\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Request\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Browse for \", _jsx(_components.a, {\n        href: \"/docs/lindb/lin-ql/sql\",\n        children: \"LinQL\"\n      }), \" that is currently executing in the cluster\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/request_list.png#browser\",\n        alt: \"Memory database replica\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Log View\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Log View allows users to browse log files on all nodes in the cluster and displays related logs.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/img/lindb/guide/admin_ui/log_view.png#browser\",\n        alt: \"Log view\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tocItems":[{"id":"dashboard","level":2,"title":"Dashboard"},{"id":"broker-dashboard","level":3,"title":"Broker Dashboard"},{"id":"storage-dashboard","level":3,"title":"Storage Dashboard"},{"id":"replication","level":2,"title":"Replication"},{"id":"wal","level":3,"title":"WAL"},{"id":"write","level":3,"title":"Write"},{"id":"request","level":2,"title":"Request"},{"id":"log-view","level":2,"title":"Log View"}],"releases":null,"sidebar":[{"index":2,"title":"Getting Started","children":[{"index":1,"title":"Docker","children":[],"href":"/docs/lindb/getting-started/docker"},{"index":2,"title":"Package","children":[],"href":"/docs/lindb/getting-started/package"}]},{"index":3,"title":"Developer Guide","children":[{"index":1,"title":"Connect","children":[],"href":"/docs/lindb/developer-guide/connect"},{"index":2,"title":"Create a database","children":[],"href":"/docs/lindb/developer-guide/create-database"},{"index":3,"title":"Insert data","children":[],"href":"/docs/lindb/developer-guide/insert-data"},{"index":4,"title":"Query data","children":[],"href":"/docs/lindb/developer-guide/query-data"}]},{"index":4,"title":"Deployment","children":[{"index":1,"title":"Kubernetes","children":[],"href":"/docs/lindb/deployment/kubernetes"},{"index":2,"title":"Manual deployment","children":[],"href":"/docs/lindb/deployment/manual"}]},{"index":5,"title":"Client","children":[{"index":1,"title":"CLI","children":[],"href":"/docs/lindb/client/cli"},{"index":2,"title":"Client libraries","children":[],"href":"/docs/lindb/client/client-libraries"},{"index":3,"title":"Go","children":[],"href":"/docs/lindb/client/go"},{"index":4,"title":"Java","children":[],"href":"/docs/lindb/client/java"}]},{"index":6,"title":"Lin Ql","children":[{"index":1,"title":"Lin query language","children":[],"href":"/docs/lindb/lin-ql/sql"}]},{"index":7,"title":"Admin Console","children":[{"index":1,"title":"Introduction","children":[],"href":"/docs/lindb/admin-console/index"},{"index":2,"title":"Cluster overview","children":[],"href":"/docs/lindb/admin-console/overview"},{"index":3,"title":"Data search","children":[],"href":"/docs/lindb/admin-console/search"},{"index":4,"title":"Data explore","children":[],"href":"/docs/lindb/admin-console/explore"},{"index":5,"title":"Cluster monitoring","children":[],"href":"/docs/lindb/admin-console/monitoring"},{"index":6,"title":"Metadata","children":[],"href":"/docs/lindb/admin-console/metadata"}]},{"index":8,"title":"Api","children":[{"index":1,"title":"Introduction","children":[],"href":"/docs/lindb/api/index"},{"index":2,"title":"Insert","children":[],"href":"/docs/lindb/api/insert"},{"index":3,"title":"Query","children":[],"href":"/docs/lindb/api/query"},{"index":4,"title":"State","children":[],"href":"/docs/lindb/api/state"}]},{"index":9,"title":"Reference","children":[{"index":1,"title":"Data Model","children":[],"href":"/docs/lindb/reference/data-model"},{"index":2,"title":"Metric","children":[],"href":"/docs/lindb/reference/metric"},{"index":3,"title":"Configuration","children":[],"href":"/docs/lindb/reference/configuration"}]},{"index":10,"title":"Design","children":[{"index":1,"title":"Architecture","children":[],"href":"/docs/lindb/design/architecture"},{"index":2,"title":"Coordinator","children":[],"href":"/docs/lindb/design/coordinator"},{"index":3,"title":"Replication","children":[],"href":"/docs/lindb/design/replication"},{"index":4,"title":"Query","children":[],"href":"/docs/lindb/design/query"},{"index":5,"title":"Storage","children":[],"href":"/docs/lindb/design/storage"},{"index":6,"title":"Memory database","children":[],"href":"/docs/lindb/design/memory-database"},{"index":7,"title":"Inverted index","children":[],"href":"/docs/lindb/design/inverted-index"}]}],"locale":"","_nextI18Next":{"initialI18nStore":{"en":{"translation":{"Lin Ql":"Lin QL","Api":"API"}}},"initialLocale":"en","ns":["translation"],"userConfig":null}},"__N_SSG":true}